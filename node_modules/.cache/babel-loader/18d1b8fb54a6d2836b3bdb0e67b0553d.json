{"ast":null,"code":"var _jsxFileName = \"/home/mete/Desktop/form-manager/src/components/Modal/Modal.js\";\nimport React, { Component } from \"react\";\n\nclass Modal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formInputModel: {}\n    };\n\n    this.createForm = () => {\n      if (this.state.formInputModel) {\n        /** Object to Array */\n        let model = Object.keys(this.state.formInputModel).map(key => this.state.formInputModel[key]);\n        return model.map(item => {\n          if (item.length) {} else {\n            console.log(item);\n            return /*#__PURE__*/React.createElement(\"div\", {\n              key: item.name,\n              className: \"form-group row\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 25\n              }\n            }, /*#__PURE__*/React.createElement(\"label\", {\n              htmlFor: \"surname\",\n              className: \"col-sm-2 col-form-label\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 29\n              }\n            }, \"Surname\"), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"col-sm-10\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 29\n              }\n            }, /*#__PURE__*/React.createElement(\"input\", {\n              key: item.name,\n              name: item.name,\n              className: \"form-control\",\n              type: \"text\",\n              value: \"\",\n              placeholder: \"Default input\",\n              onChange: event => {\n                this.inputChangeHandler(event, item.required, item.dataType, item.charLength);\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 33\n              }\n            })));\n          }\n        });\n      }\n    };\n\n    this.inputChangeHandler = (event, required, dataType, charLength) => {};\n  }\n\n  componentDidMount() {\n    this.setState({\n      formInputModel: this.props.formInputModel\n    });\n  }\n\n  render() {\n    let modalStyleClass = this.props.modalState === true ? \"block\" : \"none\";\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: modalStyleClass,\n        backgroundColor: 'rgba(0, 0, 0, 0.2)'\n      },\n      className: \"modal\",\n      role: \"dialog\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-dialog\",\n      role: \"document\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"modal-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 29\n      }\n    }, \"Modal title\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.props.closeModalHandler,\n      type: \"button\",\n      className: \"close\",\n      \"data-dismiss\": \"modal\",\n      \"aria-label\": \"Close\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 29\n      }\n    }, \"\\xD7\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }\n    }, this.createForm()), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 29\n      }\n    }, \"Save changes\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.props.closeModalHandler,\n      type: \"button\",\n      className: \"btn btn-secondary\",\n      \"data-dismiss\": \"modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 29\n      }\n    }, \"Close\"))))));\n  }\n\n}\n\nexport default Modal;","map":{"version":3,"sources":["/home/mete/Desktop/form-manager/src/components/Modal/Modal.js"],"names":["React","Component","Modal","state","formInputModel","createForm","model","Object","keys","map","key","item","length","console","log","name","event","inputChangeHandler","required","dataType","charLength","componentDidMount","setState","props","render","modalStyleClass","modalState","display","backgroundColor","closeModalHandler"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nclass Modal extends Component {\n\n    state = {\n        formInputModel:{}\n    }\n\n    componentDidMount() {\n        this.setState({\n            formInputModel:this.props.formInputModel\n        })\n    }\n    \n    createForm = () => {\n        if(this.state.formInputModel){\n            /** Object to Array */\n            let model = Object.keys(this.state.formInputModel).map((key) => this.state.formInputModel[key])\n            return model.map((item)=>{\n                if(item.length){\n                    \n                }\n                else {\n                    console.log(item)\n                    return (\n                        <div key={item.name} className=\"form-group row\">\n                            <label htmlFor=\"surname\" className=\"col-sm-2 col-form-label\">Surname</label>\n                            <div className=\"col-sm-10\">\n                                <input\n                                key={item.name} \n                                name={item.name} \n                                className=\"form-control\" \n                                type=\"text\" \n                                value=\"\"\n                                placeholder=\"Default input\" \n                                onChange={(event)=>{this.inputChangeHandler(event,item.required,item.dataType,item.charLength)}}/>\n                            </div>\n                        </div>\n                    )\n                }\n            })\n        }\n    }\n    inputChangeHandler = (event,required,dataType,charLength) => {\n        \n    }\n    \n\n    render() {\n        let modalStyleClass = (this.props.modalState===true)?\"block\":\"none\";\n        return (\n            <React.Fragment>\n                <div style={{display:modalStyleClass,backgroundColor:'rgba(0, 0, 0, 0.2)'}} className=\"modal\" role=\"dialog\">\n                    <div className=\"modal-dialog\" role=\"document\">\n                        <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h5 className=\"modal-title\">Modal title</h5>\n                            <button onClick={this.props.closeModalHandler} type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                            <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </div>\n                        <div className=\"modal-body\">\n                        {this.createForm()}\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button type=\"button\" className=\"btn btn-primary\">Save changes</button>\n                            <button onClick={this.props.closeModalHandler} type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                        </div>\n                        </div>\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n\n}\n\n\nexport default Modal;"]},"metadata":{},"sourceType":"module"}