{"ast":null,"code":"var _jsxFileName = \"/home/mete/Desktop/form-manager/src/components/Modal/Modal.js\";\nimport React, { Component } from \"react\";\n\nclass Modal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formInputModel: {},\n      modalName: \"\"\n    };\n\n    this.createForm = () => {\n      if (this.state.formInputModel) {\n        /** Object to Array */\n        let model = this.state.formInputModel;\n        console.log8model;\n        return model.map(item => {\n          if (item.length) {\n            return item.map(item => {\n              return /*#__PURE__*/React.createElement(\"div\", {\n                key: item.name,\n                className: \"form-group row\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 29,\n                  columnNumber: 29\n                }\n              }, /*#__PURE__*/React.createElement(\"label\", {\n                htmlFor: \"surname\",\n                className: \"col-sm-4 col-form-label\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 30,\n                  columnNumber: 33\n                }\n              }, item.name, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n                className: \"col-sm-8\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 31,\n                  columnNumber: 33\n                }\n              }, /*#__PURE__*/React.createElement(\"input\", {\n                key: item.name,\n                name: item.name,\n                className: \"form-control\",\n                type: \"text\",\n                value: \"\",\n                placeholder: \"Default input\",\n                onChange: event => {\n                  this.inputChangeHandler(event, item);\n                },\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 32,\n                  columnNumber: 37\n                }\n              })));\n            });\n          } else {\n            return /*#__PURE__*/React.createElement(\"div\", {\n              key: item.name,\n              className: \"form-group row\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 25\n              }\n            }, /*#__PURE__*/React.createElement(\"label\", {\n              htmlFor: \"surname\",\n              className: \"col-sm-4 col-form-label\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 29\n              }\n            }, item.name, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"col-sm-8\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 29\n              }\n            }, /*#__PURE__*/React.createElement(\"input\", {\n              key: item.name,\n              name: item.name,\n              className: \"form-control\",\n              type: \"text\",\n              value: \"\",\n              placeholder: \"Default input\",\n              onChange: event => {\n                this.inputChangeHandler(event, item);\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 33\n              }\n            })));\n          }\n        });\n      }\n    };\n\n    this.inputChangeHandler = (event, item) => {\n      console.log(event);\n      console.log(item);\n      console.log(this.state.formInputModel[item.name]);\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.formInputModel) {\n      this.setState({\n        formInputModel: Object.keys(this.props.formInputModel).map(key => this.props.formInputModel[key]),\n        modalName: this.props.modalName\n      });\n    }\n  }\n\n  render() {\n    let modalStyleClass = this.props.modalState === true ? \"block\" : \"none\";\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: modalStyleClass,\n        backgroundColor: 'rgba(0, 0, 0, 0.2)'\n      },\n      className: \"modal\",\n      role: \"dialog\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-dialog\",\n      role: \"document\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"modal-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 29\n      }\n    }, this.state.modalName), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.props.closeModalHandler,\n      type: \"button\",\n      className: \"close\",\n      \"data-dismiss\": \"modal\",\n      \"aria-label\": \"Close\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 29\n      }\n    }, \"\\xD7\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }\n    }, this.createForm()), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 29\n      }\n    }, \"Save changes\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.props.closeModalHandler,\n      type: \"button\",\n      className: \"btn btn-secondary\",\n      \"data-dismiss\": \"modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 29\n      }\n    }, \"Close\"))))));\n  }\n\n}\n\nexport default Modal;","map":{"version":3,"sources":["/home/mete/Desktop/form-manager/src/components/Modal/Modal.js"],"names":["React","Component","Modal","state","formInputModel","modalName","createForm","model","console","log8model","map","item","length","name","event","inputChangeHandler","log","componentDidMount","props","setState","Object","keys","key","render","modalStyleClass","modalState","display","backgroundColor","closeModalHandler"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,KAAN,SAAoBD,SAApB,CAA8B;AAAA;AAAA;AAAA,SAE1BE,KAF0B,GAElB;AACJC,MAAAA,cAAc,EAAC,EADX;AAEJC,MAAAA,SAAS,EAAC;AAFN,KAFkB;;AAAA,SAiB1BC,UAjB0B,GAiBb,MAAM;AACf,UAAG,KAAKH,KAAL,CAAWC,cAAd,EAA6B;AACzB;AACA,YAAIG,KAAK,GAAG,KAAKJ,KAAL,CAAWC,cAAvB;AACAI,QAAAA,OAAO,CAACC,SAAR;AACA,eAAOF,KAAK,CAACG,GAAN,CAAWC,IAAD,IAAQ;AACrB,cAAGA,IAAI,CAACC,MAAR,EAAe;AACX,mBAAOD,IAAI,CAACD,GAAL,CAAUC,IAAD,IAAS;AACrB,kCACI;AAAK,gBAAA,GAAG,EAAEA,IAAI,CAACE,IAAf;AAAqB,gBAAA,SAAS,EAAC,gBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACI;AAAO,gBAAA,OAAO,EAAC,SAAf;AAAyB,gBAAA,SAAS,EAAC,yBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA8DF,IAAI,CAACE,IAAnE,MADJ,eAEI;AAAK,gBAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACI;AACA,gBAAA,GAAG,EAAEF,IAAI,CAACE,IADV;AAEA,gBAAA,IAAI,EAAEF,IAAI,CAACE,IAFX;AAGA,gBAAA,SAAS,EAAC,cAHV;AAIA,gBAAA,IAAI,EAAC,MAJL;AAKA,gBAAA,KAAK,EAAC,EALN;AAMA,gBAAA,WAAW,EAAC,eANZ;AAOA,gBAAA,QAAQ,EAAGC,KAAD,IAAS;AAAC,uBAAKC,kBAAL,CAAwBD,KAAxB,EAA8BH,IAA9B;AAAoC,iBAPxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CAFJ,CADJ;AAeH,aAhBM,CAAP;AAiBH,WAlBD,MAmBK;AACD,gCACI;AAAK,cAAA,GAAG,EAAEA,IAAI,CAACE,IAAf;AAAqB,cAAA,SAAS,EAAC,gBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACI;AAAO,cAAA,OAAO,EAAC,SAAf;AAAyB,cAAA,SAAS,EAAC,yBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA8DF,IAAI,CAACE,IAAnE,MADJ,eAEI;AAAK,cAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACI;AACA,cAAA,GAAG,EAAEF,IAAI,CAACE,IADV;AAEA,cAAA,IAAI,EAAEF,IAAI,CAACE,IAFX;AAGA,cAAA,SAAS,EAAC,cAHV;AAIA,cAAA,IAAI,EAAC,MAJL;AAKA,cAAA,KAAK,EAAC,EALN;AAMA,cAAA,WAAW,EAAC,eANZ;AAOA,cAAA,QAAQ,EAAGC,KAAD,IAAS;AAAC,qBAAKC,kBAAL,CAAwBD,KAAxB,EAA8BH,IAA9B;AAAoC,eAPxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CAFJ,CADJ;AAeH;AACJ,SArCM,CAAP;AAsCH;AACJ,KA7DyB;;AAAA,SA8D1BI,kBA9D0B,GA8DL,CAACD,KAAD,EAAOH,IAAP,KAAgB;AACjCH,MAAAA,OAAO,CAACQ,GAAR,CAAYF,KAAZ;AACAN,MAAAA,OAAO,CAACQ,GAAR,CAAYL,IAAZ;AAEAH,MAAAA,OAAO,CAACQ,GAAR,CAAY,KAAKb,KAAL,CAAWC,cAAX,CAA0BO,IAAI,CAACE,IAA/B,CAAZ;AACH,KAnEyB;AAAA;;AAO1BI,EAAAA,iBAAiB,GAAG;AAChB,QAAG,KAAKC,KAAL,CAAWd,cAAd,EAA6B;AACzB,WAAKe,QAAL,CAAc;AACVf,QAAAA,cAAc,EAACgB,MAAM,CAACC,IAAP,CAAY,KAAKH,KAAL,CAAWd,cAAvB,EAAuCM,GAAvC,CAA4CY,GAAD,IAAS,KAAKJ,KAAL,CAAWd,cAAX,CAA0BkB,GAA1B,CAApD,CADL;AAEVjB,QAAAA,SAAS,EAAC,KAAKa,KAAL,CAAWb;AAFX,OAAd;AAIH;AAEJ;;AAuDDkB,EAAAA,MAAM,GAAG;AACL,QAAIC,eAAe,GAAI,KAAKN,KAAL,CAAWO,UAAX,KAAwB,IAAzB,GAA+B,OAA/B,GAAuC,MAA7D;AACA,wBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,OAAO,EAACF,eAAT;AAAyBG,QAAAA,eAAe,EAAC;AAAzC,OAAZ;AAA4E,MAAA,SAAS,EAAC,OAAtF;AAA8F,MAAA,IAAI,EAAC,QAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAA8B,MAAA,IAAI,EAAC,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6B,KAAKxB,KAAL,CAAWE,SAAxC,CADJ,eAEI;AAAQ,MAAA,OAAO,EAAE,KAAKa,KAAL,CAAWU,iBAA5B;AAA+C,MAAA,IAAI,EAAC,QAApD;AAA6D,MAAA,SAAS,EAAC,OAAvE;AAA+E,sBAAa,OAA5F;AAAoG,oBAAW,OAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAM,qBAAY,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,CAFJ,CADA,eAOA;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKtB,UAAL,EADD,CAPA,eAUA;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAQ,MAAA,OAAO,EAAE,KAAKY,KAAL,CAAWU,iBAA5B;AAA+C,MAAA,IAAI,EAAC,QAApD;AAA6D,MAAA,SAAS,EAAC,mBAAvE;AAA2F,sBAAa,OAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,CAVA,CADJ,CADJ,CADJ,CADJ;AAuBH;;AA/FyB;;AAoG9B,eAAe1B,KAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass Modal extends Component {\n\n    state = {\n        formInputModel:{},\n        modalName:\"\"\n    }\n\n    componentDidMount() {\n        if(this.props.formInputModel){\n            this.setState({\n                formInputModel:Object.keys(this.props.formInputModel).map((key) => this.props.formInputModel[key]),\n                modalName:this.props.modalName\n            })\n        }\n        \n    }\n    \n    createForm = () => {\n        if(this.state.formInputModel){\n            /** Object to Array */\n            let model = this.state.formInputModel\n            console.log8model\n            return model.map((item)=>{\n                if(item.length){\n                    return item.map((item)=> {\n                        return(\n                            <div key={item.name} className=\"form-group row\">\n                                <label htmlFor=\"surname\" className=\"col-sm-4 col-form-label\">{item.name} </label>\n                                <div className=\"col-sm-8\">\n                                    <input\n                                    key={item.name} \n                                    name={item.name} \n                                    className=\"form-control\" \n                                    type=\"text\" \n                                    value=\"\"\n                                    placeholder=\"Default input\" \n                                    onChange={(event)=>{this.inputChangeHandler(event,item)}}/>\n                                </div>\n                            </div>\n                        )\n                    })\n                }\n                else {\n                    return (\n                        <div key={item.name} className=\"form-group row\">\n                            <label htmlFor=\"surname\" className=\"col-sm-4 col-form-label\">{item.name} </label>\n                            <div className=\"col-sm-8\">\n                                <input\n                                key={item.name} \n                                name={item.name} \n                                className=\"form-control\" \n                                type=\"text\" \n                                value=\"\"\n                                placeholder=\"Default input\" \n                                onChange={(event)=>{this.inputChangeHandler(event,item)}}/>\n                            </div>\n                        </div>\n                    )\n                }\n            })\n        }\n    }\n    inputChangeHandler = (event,item) => {\n        console.log(event)\n        console.log(item)\n        \n        console.log(this.state.formInputModel[item.name])\n    }\n    \n\n    render() {\n        let modalStyleClass = (this.props.modalState===true)?\"block\":\"none\";\n        return (\n            <React.Fragment>\n                <div style={{display:modalStyleClass,backgroundColor:'rgba(0, 0, 0, 0.2)'}} className=\"modal\" role=\"dialog\">\n                    <div className=\"modal-dialog\" role=\"document\">\n                        <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h5 className=\"modal-title\">{this.state.modalName}</h5>\n                            <button onClick={this.props.closeModalHandler} type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                            <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </div>\n                        <div className=\"modal-body\">\n                        {this.createForm()}\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button type=\"button\" className=\"btn btn-primary\">Save changes</button>\n                            <button onClick={this.props.closeModalHandler} type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                        </div>\n                        </div>\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n\n}\n\n\nexport default Modal;"]},"metadata":{},"sourceType":"module"}