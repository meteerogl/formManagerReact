{"ast":null,"code":"var _jsxFileName = \"/home/mete/Desktop/form-manager/src/components/FormManager/FormManager.js\";\nimport React, { Component } from 'react';\nimport Modal from '../Modal/Modal';\nimport FormList from './FormList/FormList';\n\nconst slugify = require(\"slugify\");\n\nclass FormManager extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      form_list: [],\n      modal_state: false\n    };\n    this.testFormObjectList = [{\n      id: slugify(\"Test form\"),\n      \"name\": \"Test form\",\n      \"description\": \"Uye bilgi formu\",\n      createdAt: \"2017-01-08\",\n      fields: [{\n        \"required\": true,\n        \"name\": \"Ad\",\n        dataType: \"STRING\"\n      }, {\n        \"required\": true,\n        \"name\": \"Soyad\",\n        dataType: \"STRING\"\n      }, {\n        \"required\": false,\n        \"name\": \"Yaş\",\n        dataType: \"NUMBER\"\n      }]\n    }, {\n      id: slugify(\"Test form2\"),\n      \"name\": \"Test form2\",\n      \"description\": \"Uye bilgi formu\",\n      createdAt: \"2017-01-08\",\n      fields: [{\n        \"required\": true,\n        \"name\": \"Ad\",\n        dataType: \"STRING\"\n      }, {\n        \"required\": true,\n        \"name\": \"Soyad\",\n        dataType: \"STRING\"\n      }, {\n        \"required\": false,\n        \"name\": \"Yaş\",\n        dataType: \"NUMBER\"\n      }]\n    }];\n\n    this.initCreateForms = () => {\n      console.log(\"CLEAR LOCAL STRAGE INDEX FORM MANAGER 42\"); //localStorage.clear()\n\n      if (!localStorage.getItem(\"form_list\")) {\n        localStorage.setItem(\"form_list\", JSON.stringify(this.testFormObjectList));\n      }\n\n      let init_form_list = JSON.parse(localStorage.getItem(\"form_list\"));\n      this.setState({\n        form_list: init_form_list\n      });\n    };\n\n    this.formInputModel = {\n      \"name\": {\n        \"required\": true,\n        \"name\": \"Form Name\",\n        dataType: \"STRING\",\n        charLength: 20,\n        value: \"\"\n      },\n      \"description\": {\n        \"required\": true,\n        name: \"Form Description\",\n        dataType: \"STRING\",\n        charLength: 40,\n        value: \"\"\n      },\n      createdAt: {\n        \"required\": true,\n        name: \"Created At\",\n        dataType: \"STRING\",\n        value: \"\"\n      },\n      fields: [{\n        \"required\": true,\n        \"name\": \"Ad\",\n        dataType: \"STRING\",\n        charLength: 20,\n        value: \"\"\n      }, {\n        \"required\": true,\n        \"name\": \"Soyad\",\n        dataType: \"STRING\",\n        charLength: 20,\n        value: \"\"\n      }, {\n        \"required\": false,\n        \"name\": \"Yaş\",\n        dataType: \"NUMBER\",\n        charLength: 2,\n        value: \"\"\n      }]\n    };\n\n    this.addFormHandler = () => {\n      this.setState({ ...this.state,\n        modal_state: true\n      });\n    };\n\n    this.closeModalHandler = () => {\n      this.setState({\n        modal_state: false\n      });\n    };\n\n    this.saveFormHandler = (form_inf, validations) => {\n      let error_count = 0;\n      Object.keys(validations).map(item => {\n        console.log(validations[item]);\n\n        if (validations[item] === true) {\n          error_count += 1;\n        }\n      });\n\n      if (error_count === 0) {\n        let lcs = JSON.parse(localStorage.getItem(\"form_list\"));\n        console.log(form_inf);\n        let test = {\n          id: slugify(form_inf.name.value),\n          \"name\": form_inf.name.value,\n          \"description\": form_inf.description.value,\n          createdAt: \"2017-01-11\",\n          fields: [{\n            \"required\": true,\n            \"name\": form_inf.fields[0].value,\n            dataType: \"STRING\"\n          }, {\n            \"required\": true,\n            \"name\": form_inf.fields[1].value,\n            dataType: \"STRING\"\n          }, {\n            \"required\": false,\n            \"name\": form_inf.fields[2].value,\n            dataType: \"NUMBER\"\n          }]\n        };\n        lcs.push(test);\n        localStorage.clear();\n        localStorage.setItem(\"form_list\", JSON.stringify(lcs));\n        this.setState({\n          form_list: JSON.parse(localStorage.getItem(\"form_list\")),\n          modal_state: false\n        });\n      }\n    };\n\n    this.searchHandler = search_input => {\n      if (search_input.length) {\n        let filteredList = this.state.form_list.filter(item => {\n          return item.name.includes(search_input);\n        });\n        this.setState({\n          form_list: filteredList\n        });\n      } else {\n        let init_form_list = JSON.parse(localStorage.getItem(\"form_list\"));\n        this.setState({\n          form_list: init_form_list\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.initCreateForms();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.addFormHandler,\n      className: \"btn btn-success float-right mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }\n    }, \"Add Form\"), /*#__PURE__*/React.createElement(FormList, {\n      searchHandler: this.searchHandler,\n      formList: this.state.form_list,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Modal, {\n      closeModalHandler: this.closeModalHandler,\n      modalState: this.state.modal_state,\n      formInputModel: this.formInputModel,\n      modalName: \"Add Form\",\n      saveForm: this.saveFormHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default FormManager;","map":{"version":3,"sources":["/home/mete/Desktop/form-manager/src/components/FormManager/FormManager.js"],"names":["React","Component","Modal","FormList","slugify","require","FormManager","state","form_list","modal_state","testFormObjectList","id","createdAt","fields","dataType","initCreateForms","console","log","localStorage","getItem","setItem","JSON","stringify","init_form_list","parse","setState","formInputModel","charLength","value","name","addFormHandler","closeModalHandler","saveFormHandler","form_inf","validations","error_count","Object","keys","map","item","lcs","test","description","push","clear","searchHandler","search_input","length","filteredList","filter","includes","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Modal from '../Modal/Modal';\nimport FormList from './FormList/FormList';\n\nconst slugify = require(\"slugify\");\n\nclass FormManager extends Component {\n\n    state = {\n        form_list:[],\n        modal_state:false\n    }\n\n    /** ------ Init Create Example Forms ------ */\n    testFormObjectList = [\n        {\n            id:slugify(\"Test form\"),\n            \"name\": \"Test form\",\n            \"description\": \"Uye bilgi formu\",\n            createdAt: \"2017-01-08\",\n            fields: [ \n                { \"required\": true, \"name\": \"Ad\", dataType: \"STRING\" }, \n                { \"required\": true, \"name\": \"Soyad\", dataType: \"STRING\" },\n                { \"required\": false, \"name\": \"Yaş\", dataType: \"NUMBER\" } \n            ]\n        },\n        {\n            id:slugify(\"Test form2\"),\n            \"name\": \"Test form2\",\n            \"description\": \"Uye bilgi formu\",\n            createdAt: \"2017-01-08\",\n            fields: [ \n                { \"required\": true, \"name\": \"Ad\", dataType: \"STRING\" }, \n                { \"required\": true, \"name\": \"Soyad\", dataType: \"STRING\" },\n                { \"required\": false, \"name\": \"Yaş\", dataType: \"NUMBER\" } \n            ]\n        },\n    ]\n\n    initCreateForms = () => {\n\n        console.log(\"CLEAR LOCAL STRAGE INDEX FORM MANAGER 42\")\n        //localStorage.clear()\n        if(!localStorage.getItem(\"form_list\")){\n            localStorage.setItem(\"form_list\",JSON.stringify(this.testFormObjectList));\n        }\n        let init_form_list = JSON.parse(localStorage.getItem(\"form_list\"));\n        this.setState({\n            form_list:init_form_list\n        })   \n    }\n    /** --------------------------------------- */\n\n    formInputModel = { \n        \"name\": { \"required\":true, \"name\":\"Form Name\", dataType:\"STRING\",charLength:20,value:\"\"}, \n        \"description\":{\"required\":true,name:\"Form Description\",dataType:\"STRING\",charLength:40,value:\"\"},\n        createdAt: {\"required\":true,name:\"Created At\", dataType:\"STRING\",value:\"\"}, \n        fields: [ \n            { \"required\": true, \"name\": \"Ad\", dataType: \"STRING\",charLength:20,value:\"\"}, \n            { \"required\": true, \"name\": \"Soyad\", dataType: \"STRING\",charLength:20,value:\"\"},\n            { \"required\": false, \"name\": \"Yaş\", dataType: \"NUMBER\",charLength:2,value:\"\"} ] }\n\n    addFormHandler = () => {\n        this.setState({\n            ...this.state,\n            modal_state:true\n        })\n    }\n\n    closeModalHandler = () => {\n        this.setState({\n            modal_state:false\n        })\n    }\n\n    saveFormHandler = (form_inf,validations) => {\n        let error_count = 0;\n        Object.keys(validations).map((item)=>{\n            console.log(validations[item])\n            if(validations[item] === true){\n                error_count +=1;\n            }\n        })\n        if(error_count === 0 ){\n            let lcs = JSON.parse(localStorage.getItem(\"form_list\"))\n            console.log(form_inf)\n            let test = {\n                id:slugify(form_inf.name.value),\n                \"name\": form_inf.name.value,\n                \"description\": form_inf.description.value,\n                createdAt: \"2017-01-11\",\n                fields: [ \n                    { \"required\": true, \"name\": form_inf.fields[0].value, dataType: \"STRING\" }, \n                    { \"required\": true, \"name\": form_inf.fields[1].value, dataType: \"STRING\" },\n                    { \"required\": false, \"name\": form_inf.fields[2].value, dataType: \"NUMBER\" } \n                ]\n            }\n            lcs.push(test)\n            localStorage.clear()\n            localStorage.setItem(\"form_list\",JSON.stringify(lcs));\n            \n            this.setState({\n                form_list:JSON.parse(localStorage.getItem(\"form_list\")),\n                modal_state:false\n            })\n            \n        }\n\n    }\n\n    searchHandler = (search_input) => {\n        if(search_input.length){\n            let filteredList = this.state.form_list.filter((item)=>{\n                return item.name.includes(search_input)\n            })\n            this.setState({\n                form_list:filteredList\n            })\n        }\n        else {\n            let init_form_list = JSON.parse(localStorage.getItem(\"form_list\"));\n            this.setState({\n                form_list:init_form_list\n            })  \n            \n        }\n\n    }\n\n    componentDidMount() {\n        this.initCreateForms()\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"mt-3\">\n                    <button onClick={this.addFormHandler} className=\"btn btn-success float-right mb-2\">Add Form</button>\n                    <FormList searchHandler={this.searchHandler} formList={this.state.form_list}></FormList>\n                </div>\n                <Modal \n                closeModalHandler={this.closeModalHandler} \n                modalState={this.state.modal_state}\n                formInputModel={this.formInputModel}\n                modalName={\"Add Form\"}\n                saveForm={this.saveFormHandler}\n                ></Modal>\n            </React.Fragment>\n        )\n    }\n\n}\n\nexport default FormManager;\n\n"]},"metadata":{},"sourceType":"module"}