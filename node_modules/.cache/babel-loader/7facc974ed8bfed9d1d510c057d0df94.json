{"ast":null,"code":"var _jsxFileName = \"/home/mete/Desktop/form-manager/src/components/FormManager/FormList/FormList.js\";\nimport React, { Component } from 'react';\nimport Modal from '../../Modal/Modal';\nimport { Link } from 'react-router-dom'; //const slugify = require(\"slugify\");\n\nclass FormList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formList: [],\n      searchWord: \"\"\n    };\n\n    this.renderTableData = () => {\n      if (this.state.formList) {\n        return this.state.formList.map(form => {\n          const {\n            id,\n            name,\n            description,\n            createdAt\n          } = form;\n          return /*#__PURE__*/React.createElement(\"tr\", {\n            key: id,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(Link, {\n            to: {\n              pathname: \"/forms/\" + id,\n              state: form\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 29\n            }\n          }, name)), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 25\n            }\n          }, description), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 25\n            }\n          }, createdAt));\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            textAlign: \"center\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"h1\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 21\n          }\n        }, \"There is no data!\"));\n      }\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.formList !== state.formList) {\n      return {\n        formList: props.formList\n      };\n    } else {\n      return null;\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"input-group-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }\n    }, \"Search\")), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      \"aria-label\": \"Amount (to the nearest dollar)\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-bordered table-striped\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }, () => {\n      if (this.state.formList) {\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"th\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 41\n          }\n        }, \"Form Name\"), /*#__PURE__*/React.createElement(\"th\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 41\n          }\n        }, \"Description\"), /*#__PURE__*/React.createElement(\"th\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 41\n          }\n        }, \"Created At\"));\n      } else {\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 37\n          }\n        });\n      }\n    }), /*#__PURE__*/React.createElement(\"tbody\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }, this.renderTableData())), /*#__PURE__*/React.createElement(Modal, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default FormList;","map":{"version":3,"sources":["/home/mete/Desktop/form-manager/src/components/FormManager/FormList/FormList.js"],"names":["React","Component","Modal","Link","FormList","state","formList","searchWord","renderTableData","map","form","id","name","description","createdAt","pathname","textAlign","getDerivedStateFromProps","props","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Modal from '../../Modal/Modal';\nimport { Link } from 'react-router-dom';\n//const slugify = require(\"slugify\");\n\nclass FormList extends Component {\n    state = {\n        formList: [],\n        searchWord: \"\"\n    }\n\n    renderTableData = () => {\n        if (this.state.formList) {\n            return this.state.formList.map((form) => {\n                const { id, name, description, createdAt } = form;\n                return (\n                    <tr key={id}>\n                        <td><Link to={{pathname:\"/forms/\" + id,state:form}}>{name}</Link></td>\n                        <td>{description}</td>\n                        <td>{createdAt}</td>\n                    </tr>\n                )\n\n            })\n        }\n        else {\n            return (\n                <div style={{ textAlign: \"center\" }}>\n                    <h1>There is no data!</h1>\n                </div>\n            )\n        }\n\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.formList !== state.formList) {\n            return {\n                formList: props.formList\n            }\n        }\n        else {\n            return null\n        }\n    }\n\n\n\n    render() {\n\n        return (\n            <React.Fragment>\n\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\">Search</span>\n                    </div>\n                    <input type=\"text\" className=\"form-control\" aria-label=\"Amount (to the nearest dollar)\" />\n                </div>\n                <table className=\"table table-bordered table-striped\">\n                    <thead>\n                        {() => {\n                            if (this.state.formList) {\n                                return (\n                                    <tr>\n                                        <th>Form Name</th>\n                                        <th>Description</th>\n                                        <th>Created At</th>\n                                    </tr>\n                                )\n                            }\n                            else {\n                                return (\n                                    <tr></tr>\n                                )\n                            }\n                        }\n                        }\n                    </thead>\n                    <tbody style={{ textAlign: \"center\" }}>\n                        {this.renderTableData()}\n                    </tbody>\n                </table>\n                <Modal></Modal>\n            </React.Fragment>\n        )\n    }\n\n}\n\nexport default FormList;\n\n"]},"metadata":{},"sourceType":"module"}